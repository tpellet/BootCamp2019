function [residual, g1, g2, g3] = rbc_habit_model_dynamic(y, x, params, steady_state, it_)
%
% Status : Computes dynamic model for Dynare
%
% Inputs :
%   y         [#dynamic variables by 1] double    vector of endogenous variables in the order stored
%                                                 in M_.lead_lag_incidence; see the Manual
%   x         [nperiods by M_.exo_nbr] double     matrix of exogenous variables (in declaration order)
%                                                 for all simulation periods
%   steady_state  [M_.endo_nbr by 1] double       vector of steady state values
%   params    [M_.param_nbr by 1] double          vector of parameter values in declaration order
%   it_       scalar double                       time period for exogenous variables for which to evaluate the model
%
% Outputs:
%   residual  [M_.endo_nbr by 1] double    vector of residuals of the dynamic model equations in order of 
%                                          declaration of the equations.
%                                          Dynare may prepend auxiliary equations, see M_.aux_vars
%   g1        [M_.endo_nbr by #dynamic variables] double    Jacobian matrix of the dynamic model equations;
%                                                           rows: equations in order of declaration
%                                                           columns: variables in order stored in M_.lead_lag_incidence followed by the ones in M_.exo_names
%   g2        [M_.endo_nbr by (#dynamic variables)^2] double   Hessian matrix of the dynamic model equations;
%                                                              rows: equations in order of declaration
%                                                              columns: variables in order stored in M_.lead_lag_incidence followed by the ones in M_.exo_names
%   g3        [M_.endo_nbr by (#dynamic variables)^3] double   Third order derivative matrix of the dynamic model equations;
%                                                              rows: equations in order of declaration
%                                                              columns: variables in order stored in M_.lead_lag_incidence followed by the ones in M_.exo_names
%
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

%
% Model equations
%

residual = zeros(14, 1);
T14 = (-1)/params(2);
T21 = (y(18)-y(5)*params(6))^T14;
T23 = (y(5)-params(6)*y(1))^T14-params(6)*params(1)*T21;
T36 = 1/params(3);
T46 = exp(y(11))*y(2)^params(7);
T48 = y(8)^(1-params(7));
lhs =T23;
rhs =params(1)*T21*(1-params(8)+y(19));
residual(1)= lhs-rhs;
lhs =T23*y(10);
rhs =params(4)*y(8)^T36;
residual(2)= lhs-rhs;
lhs =y(4);
rhs =T46*T48;
residual(3)= lhs-rhs;
lhs =y(10);
rhs =y(4)*(1-params(7))/y(8);
residual(4)= lhs-rhs;
lhs =y(9);
rhs =y(4)*params(7)/y(2);
residual(5)= lhs-rhs;
lhs =y(6);
rhs =(1-params(8))*y(2)+y(7);
residual(6)= lhs-rhs;
lhs =y(4);
rhs =y(5)+y(7);
residual(7)= lhs-rhs;
lhs =y(11);
rhs =params(9)*y(3)+x(it_, 1);
residual(8)= lhs-rhs;
lhs =y(12);
rhs =100*log(y(4));
residual(9)= lhs-rhs;
lhs =y(13);
rhs =100*log(y(5));
residual(10)= lhs-rhs;
lhs =y(14);
rhs =100*log(y(7));
residual(11)= lhs-rhs;
lhs =y(15);
rhs =100*log(y(8));
residual(12)= lhs-rhs;
lhs =y(16);
rhs =100*log(y(10));
residual(13)= lhs-rhs;
lhs =y(17);
rhs =y(9)*400;
residual(14)= lhs-rhs;
if nargout >= 2,
  g1 = zeros(14, 20);

  %
  % Jacobian matrix
  %

T104 = getPowerDeriv(y(5)-params(6)*y(1),T14,1);
T107 = getPowerDeriv(y(18)-y(5)*params(6),T14,1);
T108 = (-params(6))*T107;
T125 = exp(y(11))*getPowerDeriv(y(2),params(7),1);
T139 = getPowerDeriv(y(8),1-params(7),1);
  g1(1,1)=(-params(6))*T104;
  g1(1,5)=T104-params(6)*params(1)*T108-(1-params(8)+y(19))*params(1)*T108;
  g1(1,18)=(-(params(6)*params(1)*T107))-(1-params(8)+y(19))*params(1)*T107;
  g1(1,19)=(-(params(1)*T21));
  g1(2,1)=y(10)*(-params(6))*T104;
  g1(2,5)=y(10)*(T104-params(6)*params(1)*T108);
  g1(2,18)=y(10)*(-(params(6)*params(1)*T107));
  g1(2,8)=(-(params(4)*getPowerDeriv(y(8),T36,1)));
  g1(2,10)=T23;
  g1(3,4)=1;
  g1(3,2)=(-(T48*T125));
  g1(3,8)=(-(T46*T139));
  g1(3,11)=(-(T46*T48));
  g1(4,4)=(-((1-params(7))/y(8)));
  g1(4,8)=(-((-(y(4)*(1-params(7))))/(y(8)*y(8))));
  g1(4,10)=1;
  g1(5,4)=(-(params(7)/y(2)));
  g1(5,2)=(-((-(y(4)*params(7)))/(y(2)*y(2))));
  g1(5,9)=1;
  g1(6,2)=(-(1-params(8)));
  g1(6,6)=1;
  g1(6,7)=(-1);
  g1(7,4)=1;
  g1(7,5)=(-1);
  g1(7,7)=(-1);
  g1(8,3)=(-params(9));
  g1(8,11)=1;
  g1(8,20)=(-1);
  g1(9,4)=(-(100*1/y(4)));
  g1(9,12)=1;
  g1(10,5)=(-(100*1/y(5)));
  g1(10,13)=1;
  g1(11,7)=(-(100*1/y(7)));
  g1(11,14)=1;
  g1(12,8)=(-(100*1/y(8)));
  g1(12,15)=1;
  g1(13,10)=(-(100*1/y(10)));
  g1(13,16)=1;
  g1(14,9)=(-400);
  g1(14,17)=1;

if nargout >= 3,
  %
  % Hessian matrix
  %

  v2 = zeros(45,3);
T156 = getPowerDeriv(y(5)-params(6)*y(1),T14,2);
T157 = (-params(6))*T156;
T159 = getPowerDeriv(y(18)-y(5)*params(6),T14,2);
T160 = (-params(6))*T159;
T161 = (-params(6))*T160;
T188 = exp(y(11))*getPowerDeriv(y(2),params(7),2);
T193 = getPowerDeriv(y(8),1-params(7),2);
  v2(1,1)=1;
  v2(1,2)=1;
  v2(1,3)=(-params(6))*T157;
  v2(2,1)=1;
  v2(2,2)=81;
  v2(2,3)=T157;
  v2(3,1)=1;
  v2(3,2)=5;
  v2(3,3)=  v2(2,3);
  v2(4,1)=1;
  v2(4,2)=85;
  v2(4,3)=T156-params(6)*params(1)*T161-(1-params(8)+y(19))*params(1)*T161;
  v2(5,1)=1;
  v2(5,2)=345;
  v2(5,3)=(-(params(6)*params(1)*T160))-(1-params(8)+y(19))*params(1)*T160;
  v2(6,1)=1;
  v2(6,2)=98;
  v2(6,3)=  v2(5,3);
  v2(7,1)=1;
  v2(7,2)=358;
  v2(7,3)=(-(params(6)*params(1)*T159))-(1-params(8)+y(19))*params(1)*T159;
  v2(8,1)=1;
  v2(8,2)=365;
  v2(8,3)=(-(params(1)*T108));
  v2(9,1)=1;
  v2(9,2)=99;
  v2(9,3)=  v2(8,3);
  v2(10,1)=1;
  v2(10,2)=378;
  v2(10,3)=(-(params(1)*T107));
  v2(11,1)=1;
  v2(11,2)=359;
  v2(11,3)=  v2(10,3);
  v2(12,1)=2;
  v2(12,2)=1;
  v2(12,3)=y(10)*(-params(6))*T157;
  v2(13,1)=2;
  v2(13,2)=81;
  v2(13,3)=y(10)*T157;
  v2(14,1)=2;
  v2(14,2)=5;
  v2(14,3)=  v2(13,3);
  v2(15,1)=2;
  v2(15,2)=85;
  v2(15,3)=y(10)*(T156-params(6)*params(1)*T161);
  v2(16,1)=2;
  v2(16,2)=345;
  v2(16,3)=y(10)*(-(params(6)*params(1)*T160));
  v2(17,1)=2;
  v2(17,2)=98;
  v2(17,3)=  v2(16,3);
  v2(18,1)=2;
  v2(18,2)=358;
  v2(18,3)=y(10)*(-(params(6)*params(1)*T159));
  v2(19,1)=2;
  v2(19,2)=148;
  v2(19,3)=(-(params(4)*getPowerDeriv(y(8),T36,2)));
  v2(20,1)=2;
  v2(20,2)=181;
  v2(20,3)=(-params(6))*T104;
  v2(21,1)=2;
  v2(21,2)=10;
  v2(21,3)=  v2(20,3);
  v2(22,1)=2;
  v2(22,2)=185;
  v2(22,3)=T104-params(6)*params(1)*T108;
  v2(23,1)=2;
  v2(23,2)=90;
  v2(23,3)=  v2(22,3);
  v2(24,1)=2;
  v2(24,2)=198;
  v2(24,3)=(-(params(6)*params(1)*T107));
  v2(25,1)=2;
  v2(25,2)=350;
  v2(25,3)=  v2(24,3);
  v2(26,1)=3;
  v2(26,2)=22;
  v2(26,3)=(-(T48*T188));
  v2(27,1)=3;
  v2(27,2)=142;
  v2(27,3)=(-(T125*T139));
  v2(28,1)=3;
  v2(28,2)=28;
  v2(28,3)=  v2(27,3);
  v2(29,1)=3;
  v2(29,2)=148;
  v2(29,3)=(-(T46*T193));
  v2(30,1)=3;
  v2(30,2)=202;
  v2(30,3)=(-(T48*T125));
  v2(31,1)=3;
  v2(31,2)=31;
  v2(31,3)=  v2(30,3);
  v2(32,1)=3;
  v2(32,2)=208;
  v2(32,3)=(-(T46*T139));
  v2(33,1)=3;
  v2(33,2)=151;
  v2(33,3)=  v2(32,3);
  v2(34,1)=3;
  v2(34,2)=211;
  v2(34,3)=(-(T46*T48));
  v2(35,1)=4;
  v2(35,2)=144;
  v2(35,3)=(-((-(1-params(7)))/(y(8)*y(8))));
  v2(36,1)=4;
  v2(36,2)=68;
  v2(36,3)=  v2(35,3);
  v2(37,1)=4;
  v2(37,2)=148;
  v2(37,3)=(-((-((-(y(4)*(1-params(7))))*(y(8)+y(8))))/(y(8)*y(8)*y(8)*y(8))));
  v2(38,1)=5;
  v2(38,2)=24;
  v2(38,3)=(-((-params(7))/(y(2)*y(2))));
  v2(39,1)=5;
  v2(39,2)=62;
  v2(39,3)=  v2(38,3);
  v2(40,1)=5;
  v2(40,2)=22;
  v2(40,3)=(-((-((-(y(4)*params(7)))*(y(2)+y(2))))/(y(2)*y(2)*y(2)*y(2))));
  v2(41,1)=9;
  v2(41,2)=64;
  v2(41,3)=(-(100*(-1)/(y(4)*y(4))));
  v2(42,1)=10;
  v2(42,2)=85;
  v2(42,3)=(-(100*(-1)/(y(5)*y(5))));
  v2(43,1)=11;
  v2(43,2)=127;
  v2(43,3)=(-(100*(-1)/(y(7)*y(7))));
  v2(44,1)=12;
  v2(44,2)=148;
  v2(44,3)=(-(100*(-1)/(y(8)*y(8))));
  v2(45,1)=13;
  v2(45,2)=190;
  v2(45,3)=(-(100*(-1)/(y(10)*y(10))));
  g2 = sparse(v2(:,1),v2(:,2),v2(:,3),14,400);
if nargout >= 4,
  %
  % Third order derivatives
  %

  v3 = zeros(104,3);
T233 = getPowerDeriv(y(5)-params(6)*y(1),T14,3);
T234 = (-params(6))*T233;
T235 = (-params(6))*T234;
T237 = getPowerDeriv(y(18)-y(5)*params(6),T14,3);
T238 = (-params(6))*T237;
T239 = (-params(6))*T238;
T240 = (-params(6))*T239;
  v3(1,1)=1;
  v3(1,2)=1;
  v3(1,3)=(-params(6))*T235;
  v3(2,1)=1;
  v3(2,2)=1601;
  v3(2,3)=T235;
  v3(3,1)=1;
  v3(3,2)=5;
  v3(3,3)=  v3(2,3);
  v3(4,1)=1;
  v3(4,2)=81;
  v3(4,3)=  v3(2,3);
  v3(5,1)=1;
  v3(5,2)=1681;
  v3(5,3)=T234;
  v3(6,1)=1;
  v3(6,2)=85;
  v3(6,3)=  v3(5,3);
  v3(7,1)=1;
  v3(7,2)=1605;
  v3(7,3)=  v3(5,3);
  v3(8,1)=1;
  v3(8,2)=1685;
  v3(8,3)=T233-params(6)*params(1)*T240-(1-params(8)+y(19))*params(1)*T240;
  v3(9,1)=1;
  v3(9,2)=6885;
  v3(9,3)=(-(params(6)*params(1)*T239))-(1-params(8)+y(19))*params(1)*T239;
  v3(10,1)=1;
  v3(10,2)=1698;
  v3(10,3)=  v3(9,3);
  v3(11,1)=1;
  v3(11,2)=1945;
  v3(11,3)=  v3(9,3);
  v3(12,1)=1;
  v3(12,2)=7145;
  v3(12,3)=(-(params(6)*params(1)*T238))-(1-params(8)+y(19))*params(1)*T238;
  v3(13,1)=1;
  v3(13,2)=1958;
  v3(13,3)=  v3(12,3);
  v3(14,1)=1;
  v3(14,2)=6898;
  v3(14,3)=  v3(12,3);
  v3(15,1)=1;
  v3(15,2)=7158;
  v3(15,3)=(-(params(6)*params(1)*T237))-(1-params(8)+y(19))*params(1)*T237;
  v3(16,1)=1;
  v3(16,2)=7285;
  v3(16,3)=(-(params(1)*T161));
  v3(17,1)=1;
  v3(17,2)=1699;
  v3(17,3)=  v3(16,3);
  v3(18,1)=1;
  v3(18,2)=1965;
  v3(18,3)=  v3(16,3);
  v3(19,1)=1;
  v3(19,2)=7545;
  v3(19,3)=(-(params(1)*T160));
  v3(20,1)=1;
  v3(20,2)=1959;
  v3(20,3)=  v3(19,3);
  v3(21,1)=1;
  v3(21,2)=1978;
  v3(21,3)=  v3(19,3);
  v3(22,1)=1;
  v3(22,2)=6899;
  v3(22,3)=  v3(19,3);
  v3(23,1)=1;
  v3(23,2)=7165;
  v3(23,3)=  v3(19,3);
  v3(24,1)=1;
  v3(24,2)=7298;
  v3(24,3)=  v3(19,3);
  v3(25,1)=1;
  v3(25,2)=7558;
  v3(25,3)=(-(params(1)*T159));
  v3(26,1)=1;
  v3(26,2)=7159;
  v3(26,3)=  v3(25,3);
  v3(27,1)=1;
  v3(27,2)=7178;
  v3(27,3)=  v3(25,3);
  v3(28,1)=2;
  v3(28,2)=1;
  v3(28,3)=y(10)*(-params(6))*T235;
  v3(29,1)=2;
  v3(29,2)=1601;
  v3(29,3)=y(10)*T235;
  v3(30,1)=2;
  v3(30,2)=5;
  v3(30,3)=  v3(29,3);
  v3(31,1)=2;
  v3(31,2)=81;
  v3(31,3)=  v3(29,3);
  v3(32,1)=2;
  v3(32,2)=1681;
  v3(32,3)=y(10)*T234;
  v3(33,1)=2;
  v3(33,2)=85;
  v3(33,3)=  v3(32,3);
  v3(34,1)=2;
  v3(34,2)=1605;
  v3(34,3)=  v3(32,3);
  v3(35,1)=2;
  v3(35,2)=1685;
  v3(35,3)=y(10)*(T233-params(6)*params(1)*T240);
  v3(36,1)=2;
  v3(36,2)=6885;
  v3(36,3)=y(10)*(-(params(6)*params(1)*T239));
  v3(37,1)=2;
  v3(37,2)=1698;
  v3(37,3)=  v3(36,3);
  v3(38,1)=2;
  v3(38,2)=1945;
  v3(38,3)=  v3(36,3);
  v3(39,1)=2;
  v3(39,2)=7145;
  v3(39,3)=y(10)*(-(params(6)*params(1)*T238));
  v3(40,1)=2;
  v3(40,2)=1958;
  v3(40,3)=  v3(39,3);
  v3(41,1)=2;
  v3(41,2)=6898;
  v3(41,3)=  v3(39,3);
  v3(42,1)=2;
  v3(42,2)=7158;
  v3(42,3)=y(10)*(-(params(6)*params(1)*T237));
  v3(43,1)=2;
  v3(43,2)=2948;
  v3(43,3)=(-(params(4)*getPowerDeriv(y(8),T36,3)));
  v3(44,1)=2;
  v3(44,2)=3601;
  v3(44,3)=(-params(6))*T157;
  v3(45,1)=2;
  v3(45,2)=10;
  v3(45,3)=  v3(44,3);
  v3(46,1)=2;
  v3(46,2)=181;
  v3(46,3)=  v3(44,3);
  v3(47,1)=2;
  v3(47,2)=3681;
  v3(47,3)=T157;
  v3(48,1)=2;
  v3(48,2)=90;
  v3(48,3)=  v3(47,3);
  v3(49,1)=2;
  v3(49,2)=185;
  v3(49,3)=  v3(47,3);
  v3(50,1)=2;
  v3(50,2)=1610;
  v3(50,3)=  v3(47,3);
  v3(51,1)=2;
  v3(51,2)=1781;
  v3(51,3)=  v3(47,3);
  v3(52,1)=2;
  v3(52,2)=3605;
  v3(52,3)=  v3(47,3);
  v3(53,1)=2;
  v3(53,2)=3685;
  v3(53,3)=T156-params(6)*params(1)*T161;
  v3(54,1)=2;
  v3(54,2)=1690;
  v3(54,3)=  v3(53,3);
  v3(55,1)=2;
  v3(55,2)=1785;
  v3(55,3)=  v3(53,3);
  v3(56,1)=2;
  v3(56,2)=3945;
  v3(56,3)=(-(params(6)*params(1)*T160));
  v3(57,1)=2;
  v3(57,2)=1798;
  v3(57,3)=  v3(56,3);
  v3(58,1)=2;
  v3(58,2)=1950;
  v3(58,3)=  v3(56,3);
  v3(59,1)=2;
  v3(59,2)=3698;
  v3(59,3)=  v3(56,3);
  v3(60,1)=2;
  v3(60,2)=6890;
  v3(60,3)=  v3(56,3);
  v3(61,1)=2;
  v3(61,2)=6985;
  v3(61,3)=  v3(56,3);
  v3(62,1)=2;
  v3(62,2)=3958;
  v3(62,3)=(-(params(6)*params(1)*T159));
  v3(63,1)=2;
  v3(63,2)=6998;
  v3(63,3)=  v3(62,3);
  v3(64,1)=2;
  v3(64,2)=7150;
  v3(64,3)=  v3(62,3);
  v3(65,1)=3;
  v3(65,2)=422;
  v3(65,3)=(-(T48*exp(y(11))*getPowerDeriv(y(2),params(7),3)));
  v3(66,1)=3;
  v3(66,2)=2822;
  v3(66,3)=(-(T139*T188));
  v3(67,1)=3;
  v3(67,2)=428;
  v3(67,3)=  v3(66,3);
  v3(68,1)=3;
  v3(68,2)=542;
  v3(68,3)=  v3(66,3);
  v3(69,1)=3;
  v3(69,2)=2942;
  v3(69,3)=(-(T125*T193));
  v3(70,1)=3;
  v3(70,2)=548;
  v3(70,3)=  v3(69,3);
  v3(71,1)=3;
  v3(71,2)=2828;
  v3(71,3)=  v3(69,3);
  v3(72,1)=3;
  v3(72,2)=2948;
  v3(72,3)=(-(T46*getPowerDeriv(y(8),1-params(7),3)));
  v3(73,1)=3;
  v3(73,2)=4022;
  v3(73,3)=(-(T48*T188));
  v3(74,1)=3;
  v3(74,2)=431;
  v3(74,3)=  v3(73,3);
  v3(75,1)=3;
  v3(75,2)=602;
  v3(75,3)=  v3(73,3);
  v3(76,1)=3;
  v3(76,2)=4142;
  v3(76,3)=(-(T125*T139));
  v3(77,1)=3;
  v3(77,2)=551;
  v3(77,3)=  v3(76,3);
  v3(78,1)=3;
  v3(78,2)=608;
  v3(78,3)=  v3(76,3);
  v3(79,1)=3;
  v3(79,2)=2831;
  v3(79,3)=  v3(76,3);
  v3(80,1)=3;
  v3(80,2)=3002;
  v3(80,3)=  v3(76,3);
  v3(81,1)=3;
  v3(81,2)=4028;
  v3(81,3)=  v3(76,3);
  v3(82,1)=3;
  v3(82,2)=4148;
  v3(82,3)=(-(T46*T193));
  v3(83,1)=3;
  v3(83,2)=2951;
  v3(83,3)=  v3(82,3);
  v3(84,1)=3;
  v3(84,2)=3008;
  v3(84,3)=  v3(82,3);
  v3(85,1)=3;
  v3(85,2)=4202;
  v3(85,3)=(-(T48*T125));
  v3(86,1)=3;
  v3(86,2)=611;
  v3(86,3)=  v3(85,3);
  v3(87,1)=3;
  v3(87,2)=4031;
  v3(87,3)=  v3(85,3);
  v3(88,1)=3;
  v3(88,2)=4208;
  v3(88,3)=(-(T46*T139));
  v3(89,1)=3;
  v3(89,2)=3011;
  v3(89,3)=  v3(88,3);
  v3(90,1)=3;
  v3(90,2)=4151;
  v3(90,3)=  v3(88,3);
  v3(91,1)=3;
  v3(91,2)=4211;
  v3(91,3)=(-(T46*T48));
  v3(92,1)=4;
  v3(92,2)=2944;
  v3(92,3)=(-((-((-(1-params(7)))*(y(8)+y(8))))/(y(8)*y(8)*y(8)*y(8))));
  v3(93,1)=4;
  v3(93,2)=1348;
  v3(93,3)=  v3(92,3);
  v3(94,1)=4;
  v3(94,2)=2868;
  v3(94,3)=  v3(92,3);
  v3(95,1)=4;
  v3(95,2)=2948;
  v3(95,3)=(-((y(8)*y(8)*y(8)*y(8)*(-(2*(-(y(4)*(1-params(7))))))-(-((-(y(4)*(1-params(7))))*(y(8)+y(8))))*(y(8)*y(8)*(y(8)+y(8))+y(8)*y(8)*(y(8)+y(8))))/(y(8)*y(8)*y(8)*y(8)*y(8)*y(8)*y(8)*y(8))));
  v3(96,1)=5;
  v3(96,2)=424;
  v3(96,3)=(-((-((-params(7))*(y(2)+y(2))))/(y(2)*y(2)*y(2)*y(2))));
  v3(97,1)=5;
  v3(97,2)=462;
  v3(97,3)=  v3(96,3);
  v3(98,1)=5;
  v3(98,2)=1222;
  v3(98,3)=  v3(96,3);
  v3(99,1)=5;
  v3(99,2)=422;
  v3(99,3)=(-((y(2)*y(2)*y(2)*y(2)*(-(2*(-(y(4)*params(7)))))-(-((-(y(4)*params(7)))*(y(2)+y(2))))*(y(2)*y(2)*(y(2)+y(2))+y(2)*y(2)*(y(2)+y(2))))/(y(2)*y(2)*y(2)*y(2)*y(2)*y(2)*y(2)*y(2))));
  v3(100,1)=9;
  v3(100,2)=1264;
  v3(100,3)=(-(100*(y(4)+y(4))/(y(4)*y(4)*y(4)*y(4))));
  v3(101,1)=10;
  v3(101,2)=1685;
  v3(101,3)=(-(100*(y(5)+y(5))/(y(5)*y(5)*y(5)*y(5))));
  v3(102,1)=11;
  v3(102,2)=2527;
  v3(102,3)=(-(100*(y(7)+y(7))/(y(7)*y(7)*y(7)*y(7))));
  v3(103,1)=12;
  v3(103,2)=2948;
  v3(103,3)=(-(100*(y(8)+y(8))/(y(8)*y(8)*y(8)*y(8))));
  v3(104,1)=13;
  v3(104,2)=3790;
  v3(104,3)=(-(100*(y(10)+y(10))/(y(10)*y(10)*y(10)*y(10))));
  g3 = sparse(v3(:,1),v3(:,2),v3(:,3),14,8000);
end
end
end
end
